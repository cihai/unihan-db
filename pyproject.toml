[project]
name = "unihan_db"
version = "0.17.0"
description = "SQLAlchemy models for UNIHAN CJK database"
requires-python = ">=3.8,<4.0"
license = { text = "MIT" }
authors = [
  {name = "Tony Narlock", email = "tony@git-pull.com"}
]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "License :: OSI Approved :: MIT License",
  "Environment :: Web Environment",
  "Intended Audience :: Developers",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Database",
  "Topic :: Software Development :: Internationalization",
  "Topic :: Software Development :: Localization",
  "Topic :: Utilities",
]
keywords = [
  "unihan",
  "sqlalchemy",
  "cjk",
  "chinese",
  "japanese",
  "sql",
  "database",
]
readme = "README.md"
packages = [
  { include = "*", from = "src" },
]
include = [
  { path = "tests", format = "sdist" },
]
homepage = "https://unihan-db.git-pull.com"
dependencies = [
  "appdirs",
  "SQLAlchemy>=2",
  "unihan-etl~=0.36.0"
]

[project.urls]
"Bug Tracker" = "https://github.com/cihai/unihan-db/issues"
Documentation = "https://unihan-db.git-pull.com"
Repository = "https://github.com/cihai/unihan-db"
"Release notes" = "https://github.com/cihai/unihan-db/blob/master/CHANGES"

[tool.uv]
dev-dependencies = [
  # Docs
  "sphinx",
  "furo",
  "gp-libs",
  "sphinx-autobuild",
  "sphinx-autodoc-typehints",
  "sphinx-inline-tabs",
  "sphinxext-opengraph",
  "sphinx-copybutton",
  "sphinxext-rediraffe",
  "myst-parser",
  "linkify-it-py",
  # Testing
  "gp-libs",
  "pytest",
  "pytest-rerunfailures",
  "pytest-mock",
  "pytest-watcher",
  # Coverage
  "codecov",
  "coverage",
  "pytest-cov",
  # Lint
  "ruff",
  "mypy",
  # Annotations
  "types-appdirs",
]

[dependency-groups]
docs = [
  "sphinx",
  "furo",
  "gp-libs",
  "sphinx-autobuild",
  "sphinx-autodoc-typehints",
  "sphinx-inline-tabs",
  "sphinxext-opengraph",
  "sphinx-copybutton",
  "sphinxext-rediraffe",
  "myst-parser",
  "linkify-it-py",
]
testing = [
  "gp-libs",
  "pytest",
  "pytest-rerunfailures",
  "pytest-mock",
  "pytest-watcher",
]
coverage =[
  "codecov",
  "coverage",
  "pytest-cov",
]
lint = [
  "ruff",
  "mypy",
]
types = [
  "types-appdirs"
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
strict = true
files = [
  "src/",
  "tests/",
]

[tool.ruff]
target-version = "py38"

[tool.ruff.lint]
select = [
  "E", # pycodestyle
  "F", # pyflakes
  "I", # isort
  "UP", # pyupgrade
  "A", # flake8-builtins
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "COM", # flake8-commas
  "EM", # flake8-errmsg
  "Q", # flake8-quotes
  "PTH", # flake8-use-pathlib
  "SIM", # flake8-simplify
  "TRY", # Trycertatops
  "PERF", # Perflint
  "RUF", # Ruff-specific rules
  "D", # pydocstyle
]
ignore = [
  "COM812", # missing trailing comma, ruff format conflict
]

[tool.ruff.lint.isort]
known-first-party = ["unihan_db", "unihan_etl", "cihai"]
combine-as-imports = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"*/__init__.py" = ["F401"]

[tool.coverage.run]
branch = true
parallel = true
omit = [
  "*/_compat.py",
  "docs/conf.py",
]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
  "if __name__ == .__main__.:",
  "pragma: no cover",
  "def __repr__",
  "raise NotImplementedError",
  "return NotImplemented",
  "if TYPE_CHECKING:",
  "if t.TYPE_CHECKING:",
  "@overload( |$)",
]

[tool.pytest.ini_options]
addopts = "--reruns=0 --tb=short --no-header --showlocals --doctest-modules"
doctest_optionflags = "ELLIPSIS NORMALIZE_WHITESPACE"
testpaths = [
  "src/unihan_db",
  "tests",
  "docs",
]
filterwarnings = [
  "ignore:The frontend.Option(Parser)? class.*:DeprecationWarning::",
]

[tool.pytest-watcher]
now = true
ignore_patterns = ["*.py.*.py"]
