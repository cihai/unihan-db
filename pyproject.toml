[tool.poetry]
name = "unihan_db"
version = "0.14.0"
description = "SQLAlchemy models for UNIHAN CJK database"
license = "MIT"
authors = ["Tony Narlock <tony@git-pull.com>"]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "License :: OSI Approved :: MIT License",
  "Environment :: Web Environment",
  "Intended Audience :: Developers",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: Database",
  "Topic :: Software Development :: Internationalization",
  "Topic :: Software Development :: Localization",
  "Topic :: Utilities",
]
keywords = [
  "unihan",
  "sqlalchemy",
  "cjk",
  "chinese",
  "japanese",
  "sql",
  "database",
]

readme = "README.md"
packages = [
  { include = "*", from = "src" },
]
include = [
  { path = "tests", format = "sdist" },
]

homepage = "https://unihan-db.git-pull.com"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/cihai/unihan-db/issues"
Documentation = "https://unihan-db.git-pull.com"
Repository = "https://github.com/cihai/unihan-db"
"Release notes" = "https://github.com/cihai/unihan-db/blob/master/CHANGES"

[tool.poetry.dependencies]
python = "^3.8"
appdirs = "*"
SQLAlchemy = ">=2"
unihan-etl = "~=0.30.1"

[tool.poetry.group.docs.dependencies]
### Docs ###
sphinx = "*"
furo = "*"
gp-libs = "*"
sphinx-autobuild = "*"
sphinx-autodoc-typehints = "*"
sphinx-inline-tabs = "*"
sphinxext-opengraph = "<0.8" # https://github.com/wpilibsuite/sphinxext-opengraph/issues/100
sphinx-copybutton = "*"
sphinxext-rediraffe = "*"
myst_parser = ">=0.18.1"
docutils = "*"

[tool.poetry.group.test.dependencies]
### Testing ###
pytest = "*"
pytest-rerunfailures = "*"
pytest-watcher = "*"
gp-libs = "*"

[tool.poetry.group.coverage.dependencies]
### Coverage ###
codecov = "*"
coverage = "*"
pytest-cov = "*"

[tool.poetry.group.lint.dependencies]
### Lint ###
ruff = "*"
mypy = "*"

[tool.poetry.group.types.dependencies]
types-appdirs = "*"

[tool.mypy]
strict = true
files = [
  "src/",
  "tests/",
]

[tool.ruff]
target-version = "py38"
select = [
  "E", # pycodestyle
  "F", # pyflakes
  "I", # isort
  "UP", # pyupgrade
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "Q", # flake8-quotes
  "PTH", # flake8-use-pathlib
  "SIM", # flake8-simplify
  "TRY", # Trycertatops
  "PERF", # Perflint
  "RUF", # Ruff-specific rules
  "D", # pydocstyle
]

[tool.ruff.isort]
known-first-party = ["unihan_db", "unihan_etl", "cihai"]
combine-as-imports = true

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.ruff.per-file-ignores]
"*/__init__.py" = ["F401"]

[tool.coverage.run]
branch = true
parallel = true
omit = [
  "*/_compat.py",
  "docs/conf.py",
]

[tool.coverage.report]
show_missing = true
skip_covered = true
exclude_lines = [
  "if __name__ == .__main__.:",
  "pragma: no cover",
  "def __repr__",
  "raise NotImplementedError",
  "return NotImplemented",
  "if TYPE_CHECKING:",
  "if t.TYPE_CHECKING:",
  "@overload( |$)",
]

[tool.pytest.ini_options]
addopts = "--reruns=0 --tb=short --no-header --showlocals --doctest-modules"
doctest_optionflags = "ELLIPSIS NORMALIZE_WHITESPACE"
testpaths = [
  "src/unihan_db",
  "tests",
  "docs",
]
filterwarnings = [
  "ignore:The frontend.Option(Parser)? class.*:DeprecationWarning::",
]

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
